cmake_minimum_required(VERSION 2.6)
project(libbiosxx)

set(libbiosxx_VERSION_MAJOR 0)
set(libbiosxx_VERSION_MINOR 1)
set(libbiosxx_VERSION_PATCH 0)

include_directories("${PROJECT_SOURCE_DIR}/bios")

set(CXX_COMMON_FLAGS "-Werror -Wall")

# Compiler flags for different build types. Run
#
#   $ cmake -DCMAKE_BUILD_TYPE=<type> .
#
# For all builds:
# For CMAKE_BUILD_TYPE=Debug
#   -ggdb: Enable gdb debugging
# For CMAKE_BUILD_TYPE=Release
#   -O3: Enable all compiler optimizations
#   -g: Enable symbols for profiler tools (TODO: remove for shipping)
#   -DNDEBUG: Turn off dchecks/asserts/debug only code.
#   -Wno-strict-aliasing: Suppress warnings for potential issues with pointer aliasing.
#       Code generated by -O3 causes these warnings.
set(CXX_FLAGS_DEBUG "-g -ggdb")
set(CXX_FLAGS_RELEASE "-O3 -g -DNDEBUG -Wno-strict-aliasing")

# if no build build type is specified, default to debug builds
if (NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Debug)
endif(NOT CMAKE_BUILD_TYPE)
string(TOUPPER ${CMAKE_BUILD_TYPE} CMAKE_BUILD_TYPE)

# Set compile flags based on the build type.
if("${CMAKE_BUILD_TYPE}" STREQUAL "DEBUG")
  set(CMAKE_CXX_FLAGS ${CXX_FLAGS_DEBUG})
elseif("${CMAKE_BUILD_TYPE}" STREQUAL "RELEASE")
  set(CMAKE_CXX_FLAGS ${CXX_FLAGS_RELEASE})
else()
  message(FATAL_ERROR "Unknown build type: ${CMAKE_BUILD_TYPE}")
endif()

# Add flags that are common across build types
#  - fverboase-asm creates better annotated assembly.  This doesn't seem to
#    affect when building the binary.
set(CMAKE_CXX_FLAGS "${CXX_COMMON_FLAGS} ${CMAKE_CXX_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fverbose-asm")

add_subdirectory(bios)
